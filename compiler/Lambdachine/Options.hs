{-# LANGUAGE DeriveDataTypeable #-}
{-# OPTIONS_GHC -fno-cse -fno-full-laziness -fno-strictness #-}
module Lambdachine.Options
  ( Options(..),  getOptions )
where

import System.Console.CmdArgs

data Options = Options
  { inputFile :: FilePath
  , package_name :: String
  , dumpCoreBinds :: Bool
  , dumpBytecode  :: Bool
  , optLevel :: Int }
 deriving (Show, Data, Typeable)

options = Options
  { inputFile = def &= argPos 0 &= typFile
  , package_name = def
  , dumpCoreBinds = def &= explicit &= name "dump-core-binds"
      &= help "Dump GHC's Core."
  , dumpBytecode = def &= explicit &= name "dump-bytecode"
      &= help "Dump generated bytecode"
  , optLevel = def &= opt (0 :: Int) }
  &= summary "The Lambdachine Compiler, v0.1"
  &= program "lc"

getOptions :: IO Options
getOptions = do
  opts <- cmdArgs options
  let level = max 0 (min 2 (optLevel opts))
  return opts{ optLevel = level }

